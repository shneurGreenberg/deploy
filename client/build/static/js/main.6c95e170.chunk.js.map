{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","counter","setCounter","to","path","About","Users","User","Home","href","useHistory","useEffect","fetch","then","response","json","data","console","log","onClick","props","id","useParams","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAUe,SAASA,IAAO,IAAD,EAEEC,mBAAS,GAFX,mBAErBC,EAFqB,KAEZC,EAFY,KAI5B,OACE,cAAC,IAAD,UACE,gCACE,8BACE,+BACE,6BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,oBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,qBAEF,6BACE,cAAC,IAAD,CAAMA,GAAG,SAAT,0BAON,eAAC,IAAD,WAEE,cAAC,IAAD,CAAOC,KAAK,SAAZ,SACE,cAACC,EAAD,MAEF,cAAC,IAAD,CAAOD,KAAK,SAAZ,SACE,cAACE,EAAD,CAAOL,QAASA,EAASC,WAAYA,MAEvC,cAAC,IAAD,CAAOE,KAAK,YAAZ,SACE,cAACG,EAAD,MAEF,cAAC,IAAD,CAAOH,KAAK,IAAZ,SACE,cAACI,EAAD,CAAMP,QAASA,cAQ3B,SAASO,EAAT,GAA0B,IAAXP,EAAU,EAAVA,QACb,OACE,gCACE,sCACA,mDAAsBA,KACtB,cAAC,IAAD,CAAME,GAAG,SAAT,mBACA,uBACA,mBAAGM,KAAK,SAAR,wBAIN,SAASJ,IACSK,cAiBhB,OAfAC,qBAAU,WAQNC,MAAM,cACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GACJC,QAAQC,IAAIF,QAGf,IACI,uCAIT,SAASV,EAAT,GAAsC,IAAtBL,EAAqB,EAArBA,QAAQC,EAAa,EAAbA,WAKtB,OACE,gCACE,wCAAWD,KACX,wBAAQkB,QANZ,WACEjB,EAAWD,EAAQ,IAKjB,oBAKN,SAASM,EAAKa,GAAQ,IACdC,EAAOC,cAAPD,GACN,OAAO,uCAAUA,KCrGnB,IAYeE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAClC,EAAD,MAEFmC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.6c95e170.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useParams,\n  useHistory\n} from \"react-router-dom\";\n\nexport default function App() {\n\n  const [counter, setCounter] = useState(1);\n\n  return (\n    <Router>\n      <div>\n        <nav>\n          <ul>\n            <li>\n              <Link to=\"/\">Home</Link>\n            </li>\n            <li>\n              <Link to=\"/about\">About</Link>\n            </li>\n            <li>\n              <Link to=\"/users\">Users</Link>\n            </li>\n          </ul>\n        </nav>\n\n        {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n        <Switch>\n\n          <Route path=\"/about\">\n            <About />\n          </Route>\n          <Route path=\"/users\">\n            <Users counter={counter} setCounter={setCounter}/>\n          </Route>\n          <Route path=\"/user/:id\">\n            <User />\n          </Route>\n          <Route path=\"/\">\n            <Home counter={counter} />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\nfunction Home({counter}) {\n  return (\n    <div>\n      <h2>Home</h2>\n      <h3>number of users: {counter}</h3>\n      <Link to='/about'>About</Link>\n      <br />\n      <a href='/about'>About 2</a>\n    </div>);\n}\n\nfunction About() {\n  const history = useHistory();\n\n  useEffect(() => {\n    // fetch('https://jsonplaceholder.typicode.com/todos/1')\n    //   .then(response => response.json())\n    //   .then(json => {\n    //     console.log(json);\n    //     history.push(`/user/${json.userId}`)\n    //   })\n\n      fetch('/getNumber')\n      .then(response => response.json())\n      .then(data => {\n        console.log(data);\n        \n      })\n  }, [])\n  return <h2>About</h2>;\n  \n}\n\nfunction Users({counter,setCounter}) {\n  \n  function handleCounter(){\n    setCounter(counter+1);\n  }\n  return (\n    <div>\n      <h2>Users {counter}</h2>\n      <button onClick={handleCounter}>Add</button>\n    </div>\n  );\n}\n\nfunction User(props) {\n  let { id } = useParams();\n  return <h2>User:{id}</h2>;\n}\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}